<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.app.shopping.domain.mapper.ProductMapper">
    <select id="selectItemsCount" parameterType="com.example.app.shopping.domain.dto.common.Criteria" resultType="int">
        SELECT COUNT(*)
        FROM product p
        <where>
            <if test="criteria != null">
                <if test="criteria.keyword != null and criteria.keyword != ''">
                    AND (p.name LIKE CONCAT('%', #{criteria.keyword}, '%'))
                </if>
                <if test="criteria.majorCategory != null and criteria.majorCategory != ''">
                    AND p.majorCategory = #{criteria.majorCategory}
                </if>
                <if test="criteria.middleCategory != null and criteria.middleCategory != ''">
                    AND p.middleCategory = #{criteria.middleCategory}
                </if>
            </if>
        </where>
    </select>

    <select id="selectItems" parameterType="map" resultType="map">
        SELECT
        p.id,
        p.name,
        p.price,
        p.discountedPrice,
        p.discount,
        p.amount,
        p.majorCategory,
        p.middleCategory,
        p.regDate,
        p.updateDate,
        p.mainImgPath,
        p.mainImgName,
        IFNULL(COUNT(r.id), 0) AS reviewCount,
        IFNULL(AVG(r.rating), 0) AS averageRating
        FROM
        product p
        LEFT JOIN
        product_review_board r ON p.id = r.Pid
        <where>
            <if test="criteria.keyword != null and criteria.keyword != ''">
                AND (p.name LIKE CONCAT('%', #{criteria.keyword}, '%'))
            </if>
            <if test="criteria.majorCategory != null and criteria.majorCategory != ''">
                AND p.majorCategory = #{criteria.majorCategory}
            </if>
            <if test="criteria.middleCategory != null and criteria.middleCategory != ''">
                AND p.middleCategory = #{criteria.middleCategory}
            </if>
        </where>
        GROUP BY
        p.id
        ORDER BY
        <choose>
            <when test="criteria.sorting == '가격 내림차순'">
                p.discountedPrice DESC ,p.discount DESC, averageRating DESC
            </when>
            <when test="criteria.sorting == '가격 오름차순'">
                p.discountedPrice ASC , p.discount DESC, averageRating DESC
            </when>
            <otherwise>
                p.discount DESC, averageRating DESC
            </otherwise>
        </choose>
        LIMIT #{offset}, #{criteria.amount}
    </select>

    <select id="selectDistinctMajorCategoryList" resultType="String">
        SELECT DISTINCT majorCategory
        FROM product
    </select>

    <select id="selectDistinctMiddleCategoryList" resultType="String">
        SELECT DISTINCT middleCategory
        FROM product
    </select>

    <select id="findProductById" parameterType="Integer" resultType="map" >
        SELECT
        p.id,
        p.name,
        p.price,
        p.discountedPrice,
        p.discount,
        p.amount,
        p.majorCategory,
        p.middleCategory,
        p.content,
        p.regDate,
        p.updateDate,
        p.mainImgPath,
        p.mainImgName,
        p.subImgPath,
        p.subImgName,
        IFNULL(COUNT(r.id), 0) AS reviewCount,
        IFNULL(AVG(r.rating), 0) AS averageRating
        FROM
        product p
        LEFT JOIN
        product_review_board r ON p.id = r.Pid
        WHERE
        p.id = #{id}
        GROUP BY
        p.id
    </select>

    <select id="findByRiceProducts" resultType="map">
        SELECT
        p.id,
        p.name,
        p.price,
        p.discountedPrice,
        p.discount,
        p.amount,
        p.majorCategory,
        p.middleCategory,
        p.content,
        p.regDate,
        p.updateDate,
        p.mainImgPath,
        p.mainImgName,
        p.subImgPath,
        p.subImgName,
        IFNULL(COUNT(r.id), 0) AS reviewCount,
        IFNULL(AVG(r.rating), 0) AS averageRating
        FROM
        product p
        LEFT JOIN
        product_review_board r ON p.id = r.Pid
        LEFT JOIN
        order_item oi ON p.id = oi.Pid
        WHERE
        p.majorCategory = '쌀/잡곡'
        GROUP BY
        p.id
        ORDER BY
        COUNT(oi.id) DESC, reviewCount DESC, averageRating DESC
        LIMIT 12
    </select>

    <select id="findByFruitVegetableProducts" resultType="map">
        SELECT
        p.id,
        p.name,
        p.price,
        p.discountedPrice,
        p.discount,
        p.amount,
        p.majorCategory,
        p.middleCategory,
        p.content,
        p.regDate,
        p.updateDate,
        p.mainImgPath,
        p.mainImgName,
        p.subImgPath,
        p.subImgName,
        IFNULL(COUNT(r.id), 0) AS reviewCount,
        IFNULL(AVG(r.rating), 0) AS averageRating
        FROM
        product p
        LEFT JOIN
        product_review_board r ON p.id = r.Pid
        LEFT JOIN
        order_item oi ON p.id = oi.Pid
        WHERE
        p.majorCategory = '과일/채소'
        GROUP BY
        p.id
        ORDER BY
        COUNT(oi.id) DESC, reviewCount DESC, averageRating DESC
        LIMIT 12
    </select>

    <select id="findByMeatProducts" resultType="map">
        SELECT
        p.id,
        p.name,
        p.price,
        p.discountedPrice,
        p.discount,
        p.amount,
        p.majorCategory,
        p.middleCategory,
        p.content,
        p.regDate,
        p.updateDate,
        p.mainImgPath,
        p.mainImgName,
        p.subImgPath,
        p.subImgName,
        IFNULL(COUNT(r.id), 0) AS reviewCount,
        IFNULL(AVG(r.rating), 0) AS averageRating
        FROM
        product p
        LEFT JOIN
        product_review_board r ON p.id = r.Pid
        LEFT JOIN
        order_item oi ON p.id = oi.Pid
        WHERE
        p.majorCategory = '축산물'
        GROUP BY
        p.id
        ORDER BY
        COUNT(oi.id) DESC, reviewCount DESC, averageRating DESC
        LIMIT 12
    </select>

    <select id="findByHealthProducts" resultType="map">
        SELECT
        p.id,
        p.name,
        p.price,
        p.discountedPrice,
        p.discount,
        p.amount,
        p.majorCategory,
        p.middleCategory,
        p.content,
        p.regDate,
        p.updateDate,
        p.mainImgPath,
        p.mainImgName,
        p.subImgPath,
        p.subImgName,
        IFNULL(COUNT(r.id), 0) AS reviewCount,
        IFNULL(AVG(r.rating), 0) AS averageRating
        FROM
        product p
        LEFT JOIN
        product_review_board r ON p.id = r.Pid
        LEFT JOIN
        order_item oi ON p.id = oi.Pid
        WHERE
        p.majorCategory = '건강식품'
        GROUP BY
        p.id
        ORDER BY
        COUNT(oi.id) DESC, reviewCount DESC, averageRating DESC
        LIMIT 12
    </select>

    <select id="findByProcessedFoodProducts" resultType="map">
        SELECT
        p.id,
        p.name,
        p.price,
        p.discountedPrice,
        p.discount,
        p.amount,
        p.majorCategory,
        p.middleCategory,
        p.content,
        p.regDate,
        p.updateDate,
        p.mainImgPath,
        p.mainImgName,
        p.subImgPath,
        p.subImgName,
        IFNULL(COUNT(r.id), 0) AS reviewCount,
        IFNULL(AVG(r.rating), 0) AS averageRating
        FROM
        product p
        LEFT JOIN
        product_review_board r ON p.id = r.Pid
        LEFT JOIN
        order_item oi ON p.id = oi.Pid
        WHERE
        p.majorCategory = '가공식품'
        GROUP BY
        p.id
        ORDER BY
        COUNT(oi.id) DESC, reviewCount DESC, averageRating DESC
        LIMIT 12
    </select>



</mapper>
