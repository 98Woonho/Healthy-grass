<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.app.shopping.domain.mapper.ProductMapper">
    <select id="selectItemsCount" parameterType="com.example.app.shopping.domain.dto.common.Criteria" resultType="int">
        SELECT COUNT(*)
        FROM product p
        <where>
            <if test="criteria != null">
                <if test="criteria.keyword != null and criteria.keyword != ''">
                    AND (p.name LIKE CONCAT('%', #{criteria.keyword}, '%'))
                </if>
                <if test="criteria.majorCategory != null and criteria.majorCategory != ''">
                    AND p.majorCategory = #{criteria.majorCategory}
                </if>
                <if test="criteria.middleCategory != null and criteria.middleCategory != ''">
                    AND p.middleCategory = #{criteria.middleCategory}
                </if>
            </if>
        </where>
    </select>

    <select id="selectItems" parameterType="map" resultType="map">
        SELECT
        p.id,
        p.name,
        p.price,
        p.discountedPrice,
        p.discount,
        p.amount,
        p.majorCategory,
        p.middleCategory,
        p.regDate,
        p.updateDate,
        p.mainImgPath,
        p.mainImgName,
        IFNULL(prb.reviewCount, 0) AS reviewCount,
        IFNULL(prb.averageRating, 0) AS averageRating
        FROM
        product p
        LEFT JOIN (
        SELECT
        r.Pid,
        COUNT(r.id) AS reviewCount,
        AVG(r.rating) AS averageRating
        FROM
        product_review_board r
        GROUP BY
        r.Pid
        ) prb ON p.id = prb.Pid
        <where>
            <if test="criteria.keyword != null and criteria.keyword != ''">
                AND (p.name LIKE CONCAT('%', #{criteria.keyword}, '%'))
            </if>
            <if test="criteria.majorCategory != null and criteria.majorCategory != ''">
                AND p.majorCategory = #{criteria.majorCategory}
            </if>
            <if test="criteria.middleCategory != null and criteria.middleCategory != ''">
                AND p.middleCategory = #{criteria.middleCategory}
            </if>
        </where>
        GROUP BY
        p.id
        ORDER BY
        <choose>
            <when test="criteria.sorting == '가격 내림차순'">
                p.discountedPrice DESC ,p.discount DESC, averageRating DESC, p.id DESC
            </when>
            <when test="criteria.sorting == '가격 오름차순'">
                p.discountedPrice ASC , p.discount DESC, averageRating DESC, p.id DESC
            </when>
            <otherwise>
                p.discount DESC, averageRating DESC, p.id DESC
            </otherwise>
        </choose>
        LIMIT #{offset}, #{criteria.amount}
    </select>

    <select id="findProductList">
        SELECT name
        FROM product
    </select>

    <select id="findProductById1">
        SELECT *
        FROM product
        WHERE id = #{id};
    </select>

    <select id="findProductById" parameterType="Integer" resultType="map" >
        SELECT
        p.id,
        p.name,
        p.price,
        p.discountedPrice,
        p.discount,
        p.amount,
        p.majorCategory,
        p.middleCategory,
        p.content,
        p.regDate,
        p.updateDate,
        p.mainImgPath,
        p.mainImgName,
        p.subImgPath,
        p.subImgName,
        IFNULL(prb.reviewCount, 0) AS reviewCount,
        IFNULL(prb.averageRating, 0) AS averageRating
        FROM
        product p
        LEFT JOIN (
        SELECT
        r.Pid,
        COUNT(r.id) AS reviewCount,
        AVG(r.rating) AS averageRating
        FROM
        product_review_board r
        GROUP BY
        r.Pid
        ) prb ON p.id = prb.Pid
        WHERE
        p.id = #{id}
        GROUP BY
        p.id
    </select>
    <select id="findProductByIdList" parameterType="Integer" resultType="map" >
        SELECT
            p.id,
            p.name,
            p.price,
            p.discountedPrice,
            p.discount,
            p.amount,
            p.majorCategory,
            p.middleCategory,
            p.content,
            p.regDate,
            p.updateDate,
            p.mainImgPath,
            p.mainImgName,
            p.subImgPath,
            p.subImgName,
            IFNULL(prb.reviewCount, 0) AS reviewCount,
            IFNULL(prb.averageRating, 0) AS averageRating
        FROM
            product p
                LEFT JOIN (
                SELECT
                    r.Pid,
                    COUNT(r.id) AS reviewCount,
                    AVG(r.rating) AS averageRating
                FROM
                    product_review_board r
                GROUP BY
                    r.Pid
            ) prb ON p.id = prb.Pid
        WHERE
            p.id = #{id}
        GROUP BY
            p.id
    </select>

    <select id="findByAllCategoryProducts" resultType="map">
        SELECT
        p.id,
        p.name,
        p.price,
        p.discountedPrice,
        p.discount,
        p.amount,
        p.majorCategory,
        p.middleCategory,
        p.content,
        p.regDate,
        p.updateDate,
        p.mainImgPath,
        p.mainImgName,
        p.subImgPath,
        p.subImgName,
        IFNULL(prb.reviewCount, 0) AS reviewCount,
        IFNULL(prb.averageRating, 0) AS averageRating
        FROM
        product p
        LEFT JOIN (
        SELECT
        r.Pid,
        COUNT(r.id) AS reviewCount,
        AVG(r.rating) AS averageRating
        FROM
        product_review_board r
        GROUP BY
        r.Pid
        ) prb ON p.id = prb.Pid
        LEFT JOIN (
        SELECT
        oi.Pid,
        COUNT(oi.id) AS orderCount
        FROM
        order_item oi
        GROUP BY
        oi.Pid
        ) oic ON p.id = oic.Pid
        GROUP BY
        p.id
        ORDER BY
        oic.orderCount DESC,
        reviewCount DESC,
        averageRating DESC,
        p.id DESC
        LIMIT 12;
    </select>

    <select id="findByRiceProducts" resultType="map">
        SELECT
        p.id,
        p.name,
        p.price,
        p.discountedPrice,
        p.discount,
        p.amount,
        p.majorCategory,
        p.middleCategory,
        p.content,
        p.regDate,
        p.updateDate,
        p.mainImgPath,
        p.mainImgName,
        p.subImgPath,
        p.subImgName,
        IFNULL(prb.reviewCount, 0) AS reviewCount,
        IFNULL(prb.averageRating, 0) AS averageRating
        FROM
        product p
        LEFT JOIN (
        SELECT
        r.Pid,
        COUNT(r.id) AS reviewCount,
        AVG(r.rating) AS averageRating
        FROM
        product_review_board r
        GROUP BY
        r.Pid
        ) prb ON p.id = prb.Pid
        LEFT JOIN (
        SELECT
        oi.Pid,
        COUNT(oi.id) AS orderCount
        FROM
        order_item oi
        GROUP BY
        oi.Pid
        ) oic ON p.id = oic.Pid
        WHERE
        p.majorCategory = '쌀/잡곡'
        GROUP BY
        p.id
        ORDER BY
        oic.orderCount DESC,
        reviewCount DESC,
        averageRating DESC,
        p.id DESC
        LIMIT 12
    </select>

    <select id="findByFruitVegetableProducts" resultType="map">
        SELECT
        p.id,
        p.name,
        p.price,
        p.discountedPrice,
        p.discount,
        p.amount,
        p.majorCategory,
        p.middleCategory,
        p.content,
        p.regDate,
        p.updateDate,
        p.mainImgPath,
        p.mainImgName,
        p.subImgPath,
        p.subImgName,
        IFNULL(prb.reviewCount, 0) AS reviewCount,
        IFNULL(prb.averageRating, 0) AS averageRating
        FROM
        product p
        LEFT JOIN (
        SELECT
        r.Pid,
        COUNT(r.id) AS reviewCount,
        AVG(r.rating) AS averageRating
        FROM
        product_review_board r
        GROUP BY
        r.Pid
        ) prb ON p.id = prb.Pid
        LEFT JOIN (
        SELECT
        oi.Pid,
        COUNT(oi.id) AS orderCount
        FROM
        order_item oi
        GROUP BY
        oi.Pid
        ) oic ON p.id = oic.Pid
        WHERE
        p.majorCategory = '과일/채소'
        GROUP BY
        p.id
        ORDER BY
        oic.orderCount DESC,
        reviewCount DESC,
        averageRating DESC,
        p.id DESC
        LIMIT 12;
    </select>

    <select id="findByMeatProducts" resultType="map">
        SELECT
        p.id,
        p.name,
        p.price,
        p.discountedPrice,
        p.discount,
        p.amount,
        p.majorCategory,
        p.middleCategory,
        p.content,
        p.regDate,
        p.updateDate,
        p.mainImgPath,
        p.mainImgName,
        p.subImgPath,
        p.subImgName,
        IFNULL(prb.reviewCount, 0) AS reviewCount,
        IFNULL(prb.averageRating, 0) AS averageRating
        FROM
        product p
        LEFT JOIN (
        SELECT
        r.Pid,
        COUNT(r.id) AS reviewCount,
        AVG(r.rating) AS averageRating
        FROM
        product_review_board r
        GROUP BY
        r.Pid
        ) prb ON p.id = prb.Pid
        LEFT JOIN (
        SELECT
        oi.Pid,
        COUNT(oi.id) AS orderCount
        FROM
        order_item oi
        GROUP BY
        oi.Pid
        ) oic ON p.id = oic.Pid
        WHERE
        p.majorCategory = '축산물'
        GROUP BY
        p.id
        ORDER BY
        oic.orderCount DESC,
        reviewCount DESC,
        averageRating DESC,
        p.id DESC
        LIMIT 12
    </select>

    <select id="findByHealthProducts" resultType="map">
        SELECT
        p.id,
        p.name,
        p.price,
        p.discountedPrice,
        p.discount,
        p.amount,
        p.majorCategory,
        p.middleCategory,
        p.content,
        p.regDate,
        p.updateDate,
        p.mainImgPath,
        p.mainImgName,
        p.subImgPath,
        p.subImgName,
        IFNULL(prb.reviewCount, 0) AS reviewCount,
        IFNULL(prb.averageRating, 0) AS averageRating
        FROM
        product p
        LEFT JOIN (
        SELECT
        r.Pid,
        COUNT(r.id) AS reviewCount,
        AVG(r.rating) AS averageRating
        FROM
        product_review_board r
        GROUP BY
        r.Pid
        ) prb ON p.id = prb.Pid
        LEFT JOIN (
        SELECT
        oi.Pid,
        COUNT(oi.id) AS orderCount
        FROM
        order_item oi
        GROUP BY
        oi.Pid
        ) oic ON p.id = oic.Pid
        WHERE
        p.majorCategory = '건강식품'
        GROUP BY
        p.id
        ORDER BY
        oic.orderCount DESC,
        reviewCount DESC,
        averageRating DESC,
        p.id DESC
        LIMIT 12;
    </select>

    <select id="findByProcessedFoodProducts" resultType="map">
        SELECT
        p.id,
        p.name,
        p.price,
        p.discountedPrice,
        p.discount,
        p.amount,
        p.majorCategory,
        p.middleCategory,
        p.content,
        p.regDate,
        p.updateDate,
        p.mainImgPath,
        p.mainImgName,
        p.subImgPath,
        p.subImgName,
        IFNULL(prb.reviewCount, 0) AS reviewCount,
        IFNULL(prb.averageRating, 0) AS averageRating
        FROM
        product p
        LEFT JOIN (
        SELECT
        r.Pid,
        COUNT(r.id) AS reviewCount,
        AVG(r.rating) AS averageRating
        FROM
        product_review_board r
        GROUP BY
        r.Pid
        ) prb ON p.id = prb.Pid
        LEFT JOIN (
        SELECT
        oi.Pid,
        COUNT(oi.id) AS orderCount
        FROM
        order_item oi
        GROUP BY
        oi.Pid
        ) oic ON p.id = oic.Pid
        WHERE
        p.majorCategory = '가공식품'
        GROUP BY
        p.id
        ORDER BY
        oic.orderCount DESC,
        reviewCount DESC,
        averageRating DESC,
        p.id DESC
        LIMIT 12;

    </select>

    <select id="findByHighDiscountProducts" resultType="map">
        SELECT
        p.id,
        p.name,
        p.price,
        p.discountedPrice,
        p.discount,
        p.amount,
        p.majorCategory,
        p.middleCategory,
        p.content,
        p.regDate,
        p.updateDate,
        p.mainImgPath,
        p.mainImgName,
        p.subImgPath,
        p.subImgName,
        IFNULL(prb.reviewCount, 0) AS reviewCount,
        IFNULL(prb.averageRating, 0) AS averageRating
        FROM
        product p
        LEFT JOIN (
        SELECT
        r.Pid,
        COUNT(r.id) AS reviewCount,
        AVG(r.rating) AS averageRating
        FROM
        product_review_board r
        GROUP BY
        r.Pid
        ) prb ON p.id = prb.Pid
        LEFT JOIN (
        SELECT
        oi.Pid,
        COUNT(oi.id) AS orderCount
        FROM
        order_item oi
        GROUP BY
        oi.Pid
        ) oic ON p.id = oic.Pid
        GROUP BY
        p.id
        ORDER BY
        p.discount DESC, reviewCount DESC, averageRating DESC,
        p.id DESC
        LIMIT 12
    </select>

    <select id="findByRecentProducts" resultType="map">
        SELECT
        p.id,
        p.name,
        p.price,
        p.discountedPrice,
        p.discount,
        p.amount,
        p.majorCategory,
        p.middleCategory,
        p.content,
        p.regDate,
        p.updateDate,
        p.mainImgPath,
        p.mainImgName,
        p.subImgPath,
        p.subImgName,
        IFNULL(prb.reviewCount, 0) AS reviewCount,
        IFNULL(prb.averageRating, 0) AS averageRating
        FROM
        product p
        LEFT JOIN (
        SELECT
        r.Pid,
        COUNT(r.id) AS reviewCount,
        AVG(r.rating) AS averageRating
        FROM
        product_review_board r
        GROUP BY
        r.Pid
        ) prb ON p.id = prb.Pid
        LEFT JOIN (
        SELECT
        oi.Pid,
        COUNT(oi.id) AS orderCount
        FROM
        order_item oi
        GROUP BY
        oi.Pid
        ) oic ON p.id = oic.Pid
        GROUP BY
        p.id
        ORDER BY
        p.updateDate DESC, p.regDate DESC, reviewCount DESC, averageRating DESC, p.discount DESC,
        p.id DESC
        LIMIT 12
    </select>

    <insert id="insertProduct"
            parameterType="com.example.app.shopping.domain.dto.ProductDto"
            useGeneratedKeys="true"
            keyColumn="id"
            keyProperty="id">
            INSERT INTO `product` (`name`, `price`, `discount`, `discountedPrice`, `amount`, `majorCategory`, `middleCategory`, `content`, `regDate`, `updateDate`, `mainImgPath`, `mainImgName`, `subImgPath`, `subImgName`)
            VALUES (#{name}, #{price}, #{discount}, #{discountedPrice}, #{amount}, #{majorCategory}, #{middleCategory}, #{content}, #{regDate}, #{updateDate}, #{mainImgPath}, #{mainImgName}, #{subImgPath}, #{subImgName})
    </insert>

    <update id="updateProduct"
            parameterType="com.example.app.shopping.domain.dto.ProductDto">
        UPDATE `product`
        SET `name` = #{name},
            `price` = #{price},
            `discount` = #{discount},
            `discountedPrice` = #{discountedPrice},
            `amount` = #{amount},
            `majorCategory` = #{majorCategory},
            `middleCategory` = #{middleCategory},
            `content` = #{content},
            `updateDate` = #{updateDate},
            `mainImgPath` = #{mainImgPath},
            `mainImgName` = #{mainImgName},
            `subImgPath` = #{subImgPath},
            `subImgName` = #{subImgName}
        WHERE BINARY `id` = #{id}
        LIMIT 1
    </update>

    <delete id="deleteProduct" parameterType="Long">
        DELETE FROM `product`
        WHERE id = #{id}
    </delete>

    <select id="findAmountByProductId" parameterType="int" resultType="int">
        SELECT amount
        FROM product
        WHERE id = #{productId}
    </select>

    <!-- 관리자 상품리스트 조회 쿼리 -->
    <select id="selectAllProducts" parameterType="map" resultType="map">
        SELECT
        *
        FROM
        product p
        <where>
            <if test="criteria.keyword != null and criteria.keyword != ''">
                AND (p.name LIKE CONCAT('%', #{criteria.keyword}, '%'))
            </if>
        </where>
        ORDER BY p.updateDate DESC, p.regDate DESC
        LIMIT #{offset}, #{criteria.amount}
    </select>
</mapper>
