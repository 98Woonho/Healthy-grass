<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.app.shopping.domain.mapper.UserMapper">

    <resultMap id="userResultMap" type="com.example.app.shopping.domain.dto.UserDto">
        <result column="id" property="id" />
        <result column="password" property="password" />
        <result column="zipcode" property="zipcode" />
        <result column="streetAdr" property="streetAdr" />
        <result column="detailAdr" property="detailAdr" />
        <result column="phone" property="phone" />
        <result column="email" property="email" />
        <result column="role" property="role" />
        <result column="provider" property="provider" />
        <result column="providerId" property="providerId" />
    </resultMap>

    <select id="getUserById" resultMap="userResultMap">
        SELECT * FROM user WHERE id = #{id}
    </select>

    <insert id="insertUser" parameterType="com.example.app.shopping.domain.dto.UserDto">
        INSERT INTO user (id, name, password, zipcode, streetAdr, detailAdr, phone, email, role, provider, providerId)
        VALUES (#{id}, #{name}, #{password}, #{zipcode}, #{streetAdr}, #{detailAdr}, #{phone}, #{email}, #{role}, #{provider}, #{providerId})
    </insert>

    <update id="updateUser" parameterType="com.example.app.shopping.domain.dto.UserDto">
        UPDATE user
        SET password = #{password}, zipcode = #{zipcode},
        streetAdr = #{streetAdr}, detailAdr = #{detailAdr}, phone = #{phone}, email = #{email},
        role = #{role}, provider = #{provider}, providerId = #{providerId}
        WHERE id = #{id}
    </update>
    <update id="updateUserPassword" parameterType="String">
        UPDATE user
        SET password = #{password}
        WHERE id = #{id}
    </update>

    <delete id="deleteUserById">
        DELETE FROM user WHERE id = #{id}
    </delete>

    <select id="findUserIdByEmailAndUserName" resultType="String">
        SELECT id
        FROM user
        WHERE email = #{email}
          AND name = #{name}
    </select>

    <select id="findUserIdByPhoneAndUserName" resultType="String">
        SELECT id
        FROM user
        WHERE phone = #{phone}
          AND name = #{name}
    </select>

    <select id="findUserPasswordByEmailAndUserId" resultType="String">
        SELECT password
        FROM user
        WHERE email = #{email}
          AND id = #{id}
    </select>
    <select id="findUserEmailByUsernameAndUserPhone" resultType="String">
        SELECT email
        FROM user
        WHERE name = #{name}
          AND phone = #{phone}
    </select>
    <select id="findUserByIdAndPassword" parameterType="String" resultMap="userResultMap">
        SELECT
            *
        FROM user
        WHERE id = #{id}
        AND password = #{password}
    </select>
    <select id="findUserPasswordByUserId" parameterType="string" resultType="string">
        SELECT
            password
        FROM
            user
        WHERE
            id = #{id}
    </select>
</mapper>
